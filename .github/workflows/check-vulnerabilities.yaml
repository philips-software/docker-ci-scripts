name: Check Vulnerabilities
on:
  workflow_call:
    inputs:
      image:
        description: Image to check
        required: true
        type: string
      runs_on:
        default: ubuntu-latest
        description: Runner specification
        required: false
        type: string
jobs:
  check-vulnerabilities:
    runs-on: "${{ inputs.runs_on}}"
    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@8348525c79cd67509c593a9352954618bdc3a862 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.13.1'
      - name: Check install!
        run: cosign version
      - name: Verify container
        run: |
          COSIGN_EXPERIMENTAL=1 cosign verify ${{ inputs.image }}
      - name: Get SBOM
        run: |
          COSIGN_EXPERIMENTAL=1 cosign verify-attestation --type spdx ${{ inputs.image }} | jq '.payload |= @base64d | .payload | fromjson | select( .predicateType=="https://spdx.dev/Document" ) | .predicate.Data | fromjson | .' > spdx.json
      - name: Scan image
        id: scan
        uses: anchore/scan-action@dafbc97d7259af88b61bd260f2fde565d0668a72 # ratchet:anchore/scan-action@v3
        with:
          sbom: spdx.json
          output-format: table
          fail-build: false
      - name: Remove json
        run: "rm spdx.json \n"
